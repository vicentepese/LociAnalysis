library(readr)
CWTme_mh_APO_001_CWT_features <- read_csv("Documents/Thesis-Stroke/StatisticalAnalysis/CWT/CWTme_mh_APO-001_CWT_features.csv")
View(CWTme_mh_APO_001_CWT_features)
data <- CWTme_mh_APO_001_CWT_features
install.packages('dplyr')
library(dplyr)
data$Label <- factor(data$Label)
data$Stage <- factor(data$Stage)
tst <- data[data$Stage == '1', data$Freq_name = 'Delta']
tst <- data[data$Stage == '1', data$Freq_name == 'Delta',]
tst <- data[data$Stage == '1' & data$Freq_name == 'Delta',]
tst.mean <- group_by(data = tst, add = 'mean')
tst.mean <- group_by(.data = data)
tst.mean <- group_by(.data = data, add = mean())
tst.mean <- group_by(.data = data, add = mean
)
tst.mean <- group_by(.data = data, add = 'mean')
aggregate(x = data, by = list(ID_pat = data$ID_pat, Stage = data$Stage, Chann_name = data$Chann_name, Freq_name = data$Freq_name), FUN = mean)
data.agg <- aggregate(x = data, by = list(ID_pat = data$ID_pat, Stage = data$Stage, Chann_name = data$Chann_name, Freq_name = data$Freq_name), FUN = mean)
View(data.agg)
data$Chann_name <- factor(data$Chann_name)
data$ID_pat <- factor(data$ID_pat)
data$Freq_name <- factor(data$Freq_name)
data.agg <- aggregate(x = data, by = list(ID_pat = data$ID_pat, Stage = data$Stage, Chann_name = data$Chann_name, Freq_name = data$Freq_name), FUN = mean)
View(data.agg)
data.agg <- aggregate(x = data, by = list(data$Freq_name, data$ID_pat, data$Stage, data$Chann_name), FUN = mean)
library(readr)
me_mh_APO_001_CWT_features <- read_csv("Downloads/me_mh_APO-001_CWT_features.csv")
View(me_mh_APO_001_CWT_features)
CWTme_mh_APO_001_CWT_features$Chann_name <- factor(CWTme_mh_APO_001_CWT_features$Chann_name)
############## MANHATTAN PLOT TEMPLATE ################
?? summarise
# Import libraries
library(rjson)
library(tidyverse)
library(MatrixEQTL)
library(readr)
library(data.table)
library(ggrepel)
library(viridis)
library(hrbrthemes)
# Set working directory
setwd("~/Documents/LociAnalysis")
# Import options
options <- jsonlite::fromJSON('options.json')
# Get list of files
plot.files <- list.files(options$folder$filtChrPlot)
# Sort
plot.files <- plot.files[order(nchar(plot.files), plot.files)]
pvals <- c()
colors <- c()
plot.file <- plot.files[1]
strsplit(plot.file,'_')
strsplit(plot.file,'_')[[1]][2][1]
strsplit(plot.file,'_')[[1]][2]
strsplit(plot.file,'_')[[1]][2][1]][1]
strsplit(plot.file,'_')[[1]][2][1]
strsplit(plot.file,'_')[[1]][2][2]
strsplit(strsplit(plot.file,'_')[2],'.')[1]
strplit(strsplit(plot.file,'_')[2], '.')[1]
strsplit(strsplit(plot.file,'_')[2], '.')[1]
strsplit(plot.file,'_')[2]
strsplit(strsplit(plot.file,'_')[[1]][2], '.')[1]
strsplit(plot.file,'_')[[1]][2]
strsplit(strsplit(plot.file,'_')[[1]][2], '.')
strsplit(plot.file,'_')[[1]][2]
tst <- strsplit(plot.file,'_')[[1]][2]
tst
strsplit(tst, ".")
strsplit(tst, "\.")
strsplit(tst, "csv")
as.numeric(gsub("([0-9]+).*$", "\\1", plot.file))
strsplit(strsplit(plot.file,'_')[[1]][2], '.', fixed = TRUE)[[1]][1])
strsplit(strsplit(plot.file,'_')[[1]][2], '.', fixed = TRUE)[[1]][1]
pvals <- c()
colors <- c()
chr <- c()
i <- 1
for (plot.file in plot.files){
# Import file
plot.data <- read_csv(file = paste(options$folder$filtChrPlot, plot.file, sep = ''), col_names = FALSE)
colnames(plot.data) <- c("pos","gene","pval")
# Order positions chronologically
plot.data <- plot.data[order(plot.data$pos),]
# Keep pvals
pvals <- c(pvals, plot.data$pval)
# Keep chromosome number
chr <- c(chr, rep(strsplit(strsplit(plot.file,'_')[[1]][2], '.', fixed = TRUE)[[1]][1], length(plot.data$pos)))
# Colors
if (i == 1){
i <- 0
colors <- c(colors, rep('red', length(plot.data$pos)))
} else{
i <- 1
colors <- c(colors, rep('black', length(plot.data$pos)))
}
}
# Create arrays
x <- c(1:length(pvals))
# Creat datatable
plot.data <- data.table('pval' = -log10(pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
metaout <- plot.data
df.temp= metaout%>% group_by(chr)
View(df.temp)
View(metaout)
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos))
View(df.temp)
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len)
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len)
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
ggManh=function(metaout){
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
a=ggplot(df.temp[P_value > 1e-20], aes(x=BPcum, y=-log10(P_value))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())  return(a)
}
ggManh=function(metaout){
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
a=ggplot(df.temp[P_value > 1e-20], aes(x=BPcum, y=-log10(P_value))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())  return(a)
}
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
a=ggplot(df.temp[P_value > 1e-20], aes(x=BPcum, y=-log10(P_value))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
a=ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pvals))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
a
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pvals)))
df.temp[pvals > 1e-20]
length(df.temp[pvals > 1e-20])
View(df.temp)
a=ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
a
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval)))
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)
# Create arrays
x <- c(1:length(pvals))
# Creat datatable
plot.data <- data.table('pval' = (pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)+geom_hline(yintercept = -log10(5e-8))
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+scale_color_manual(values = cols)
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)
# Creat datatable
plot.data <- data.table('pval' = (pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
metaout <- plot.data
df.temp= metaout%>% group_by(chr) %>%
summarise(chr.len= max(pos)) %>%
mutate(tot=cumsum(as.numeric(chr.len))-chr.len) %>%
select(-chr.len) %>% left_join(metaout, ., by=c("chr"="chr")) %>% arrange(chr, pos) %>% mutate(BPcum=pos+tot)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )+ labs(x = "Chromosome")+theme_bw(base_size = 22) +
theme(plot.title = element_text(hjust = 0.5),
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(df.temp[pvals > 1e-20], aes(x=BPcum, y=-log10(pval))) +
geom_point(aes(color=as.factor(chr)), alpha=0.3, size=1.4)+geom_hline(yintercept = -log10(5e-8))+
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center )
ggplot() + geom_point(data = plot.data, aes(pos, pval), color = as.factor(chr)) +
labs(x='Position',y='-log10(pval)', title='GWAS') +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "top")
View(axisdf)
# Creat datatable
plot.data <- data.table('pval' = -log10(pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
labs(x='Position',y='-log10(pval)', title='GWAS') +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "top")
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
theme(legend.position = "none")
View(axisdf)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
setDT(df.temp)
axisdf <- df.temp %>% group_by(chr) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
View(axisdf)
axisdf <- plot.data %>% group_by(chr)
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
theme(legend.position = "none")
axisdf <- plot.data %>% group_by(chr) %>% summarize(center=( max(pos) + min(pos)) / 2 )
# Creat datatable
plot.data <- data.table('pval' = -log10(pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
axisdf <- plot.data %>% group_by(chr) %>% summarize(center=( max(pos) + min(pos)) / 2 )
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
theme(legend.position = "none")
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(chr)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
geom_hline(yintercept = -log10(5e-8)) +
theme(legend.position = "none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
for (plot.file in plot.files){
# Import file
plot.data <- read_csv(file = paste(options$folder$filtChrPlot, plot.file, sep = ''), col_names = FALSE)
colnames(plot.data) <- c("pos","gene","pval")
# Order positions chronologically
plot.data <- plot.data[order(plot.data$pos),]
# Keep pvals
pvals <- c(pvals, plot.data$pval)
# Keep chromosome number
chr <- c(chr, rep(strsplit(strsplit(plot.file,'_')[[1]][2], '.', fixed = TRUE)[[1]][1], length(plot.data$pos)))
# Colors
if (i == 1){
i <- 0
colors <- c(colors, rep('#F8766D', length(plot.data$pos)))
} else{
i <- 1
colors <- c(colors, rep('#00BFC4', length(plot.data$pos)))
}
}
# Create arrays
x <- c(1:length(pvals))
# Creat datatable
plot.data <- data.table('pval' = -log10(pvals), 'pos' = x, 'colors' = colors, 'chr' = chr)
axisdf <- plot.data %>% group_by(chr) %>% summarize(center=( max(pos) + min(pos)) / 2 )
# Plot
ggplot() + geom_point(data = plot.data, aes(pos, pval, color = as.factor(colors)), alpha = 0.3) +
scale_x_continuous(label = axisdf$chr, breaks= axisdf$center ) +
labs(x='Chromosome',y='-log10(pval)', title='GWAS') +
geom_hline(yintercept = -log10(5e-8)) +
theme(legend.position = "none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
pvals <- c()
colors <- c()
chr <- c()
i <- 1
for (plot.file in plot.files){
# Import file
plot.data <- read_csv(file = paste(options$folder$filtChrPlot, plot.file, sep = ''), col_names = FALSE)
colnames(plot.data) <- c("pos","gene","pval")
# Order positions chronologically
plot.data <- plot.data[order(plot.data$pos),]
# Keep pvals
pvals <- c(pvals, plot.data$pval)
# Keep chromosome number
chr <- c(chr, rep(strsplit(strsplit(plot.file,'_')[[1]][2], '.', fixed = TRUE)[[1]][1], length(plot.data$pos)))
# Colors
if (i == 1){
i <- 0
colors <- c(colors, rep('#F8766D', length(plot.data$pos)))
} else{
i <- 1
colors <- c(colors, rep('#00BFC4', length(plot.data$pos)))
}
}
